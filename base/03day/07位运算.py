#!/usr/bin/env python
# -*- coding:utf-8 -*-  
#====#====#====#====   
#Author:
#CreatDate:
#Version: 
#====#====#====#====
'''
位运算符:
& 位与 都为1,结果1
| 位或 有1为1
^ 异或 不同为1
~ 非 1为0,0为1,(~a ) 输出结果 -61 ，二进制解释： 1100 0011， 在一个有符号二进制数的补码形式。
<< 左移 高丢低补0 左边为高位,右边为低位
>> 右移 低丢高补0
'''
a=10
b=8
#0000 1010
#0000 1000
#0000 1000
print(a&b)#8
#0000 1010
#0000 1000
#0000 1010
print(a|b)#10
#0000 1010
#0000 1000
#0000 0010
print(a^b)

#0000 1010
#1111 0101 --这是补码,屏幕上显示的是原码
#补码转原码,最高位不变,其余取反然后加1
#1000 1011  --最高位是符号位,1表示负数,0表示正数
print(~a)#-11
'''
1.存储到计算机内部的是补码,显示到屏幕的是原码
2.补码转原码的方式:最高位不变,其余取反然后加1
3.非运算,直接计算的结果是补码,但是打印出来的是原码
'''
#左边的高位,右边是低位,高丢低补0
#0000 1010
#00101000
print(a<<2)#40
#右移,低丢高补0
#0000 1010
#000000 10
print(a>>2)
print(a+b)#10+8


#案例:计算20往左移2位,得到结果a,20往右移动2位,得到结果b,然后打印出a,b结果,
#然后a&b,得到结果c,打印c的结果.要写出计算过程
a1=20<<2
#0001 0100
#0101 0000 --80
print(a1)
b1=20>>2
#0001 0100
#0000 0101 ==5
print(b1)
print(a1&b1)#0
#0101 0000
#0000 0101
#0000 0000 --0

#案例:有a=10,b=8,交换两个变量的值,不能用第三个变量.提示:用异或
a=10
b=8

a=a^b#
#^ 异或 不同为1
#0000 1010 --a
#0000 1000 --b
#0000 0010 --a^b的结果,然后把结果赋值给a,a=0000 0010

b=a^b
#0000 0010
#0000 1000
#0000 1010 --a^b的结果,然后把结果赋值给b,b=0000 1010 -->10

a=a^b
#0000 0010
#0000 1010
#0000 1000 --a^b的结果,然后把结果赋值给a,a=0000 1000 -->8
print(a,b)
